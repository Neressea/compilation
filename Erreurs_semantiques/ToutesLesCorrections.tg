let

	type kebab = string
	type stringArray = array of string
	type str = {a:int, b:string}
	type str2 = {a:int, b:str}

	var v2 : kebab := "5"

	var stringtab1 := stringArray[12000] of "coucou"
	var stringtab2 := stringArray[50] of "salut"

	var chaine := "une chaine"

	var structure := str{a:=666, b:="abc"}
	var structure2 := str{a:=777, b:="Le kebab le kebab c'est génial"}

	var struct_folle := str2{a:=777, b:=structure}

	function void() : string = "C'est le néant"

	function calculer(premier:int, second:int, troisieme:int) : string = (

		v2 := void();

		if premier > second & second > troisieme then
			chaine := "cool"
		else (
			50;
			chaine := "pas cool"
		)
	)

	function vraiment_rien(inutile:string) = print(inutile)

	var void2 := 0

	function entiere() : int = void2

in 
	
	v2 := void();

	for k := 0 to 5 * structure.a do (

		calculer(100, 20, 5);

		/*Condition avec une condition non-booléenne*/
		if k + 3 < 10 & k > 5 then k := 5;

		/*Utilisation d'un entier dans uen condition*/
		if entiere() then print("pas 0");

		/*While avec une condition non-booléenne*/
		while 1 do (
			print(stringtab1[k]);
			k := read()
		)
	);

	/*Accès à un champ de structure*/
	struct_folle.b.a := 5;

	/*Affectation de tableau*/
	stringtab1:=stringtab2;

	/*Affectation de structures*/
	structure := structure2;

	/*Affectation de retour de let*/
	chaine := let
		var BG : int  := 3
	in
		calculer(BG, 10, 10)
	end;

	/*Let dans uen condition*/
	if let
		var BG : int  := 3
	in
		calculer(BG, 10, 10);
		BG
	end then print("Je fais de la magie noire")

end